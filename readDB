#!/usr/bin/perl
use strict;
use warnings;

use RPi::I2C;
use Time::HiRes qw(time sleep usleep);


# Setup Signals
my %sig = ( HUP => 0, ABRT => 0, USR1 => 0, USR2 => 0, CONT => 0 );
$SIG{HUP}  = sub {$sig{HUP} = 1};
$SIG{ABRT} = sub {$sig{ABRT} = 1};
$SIG{USR1} = sub {$sig{USR1} = 1};
$SIG{USR2} = sub {$sig{USR2} = 1};
$SIG{CONT} = sub {$sig{CONT} = 1};

sub attach {
	my ($addy) = @_;
	my ($device,$retval);

	$device = RPi::I2C->new($addy);
	$device = RPi::I2C->new($addy) unless ($device); 	# one retry on attach
	if ($device) {
		$retval = $device if ( $device->check_device($addy) );		
	} else {
		my $err = $device->file_error();
		print "ERROR,Unable to attach to $addy,$err";
	}
	return ($retval);
}

sub checkNibbleChkSum {
	my $value = shift;
	my $retVal = 0xFFFF;
	my $chk  = $value & 0x0f;
	my $nib = ($value & 0xf0) >> 4;
	$chk = $chk & ~$nib;
	$nib = ($value & 0xf00) >> 8;
	$chk = $chk & ~$nib;
	$nib = ($value & 0xf000) >> 12;
	$chk = $chk & ~$nib;
	$retVal = ($value & 0x0FFF) if ($chk == 0);
	return($retVal);
}

sub getdBs {
	my ($peak1,$peak2,$avg1,$avg2,$max1,$max2) = (4095,4095,4095,4095,4095,4095);
    if (my $device = attach(0x0F) ) {
      	# Get the sound data
      	my $dbRetries = 4;
      	($peak1,$dbRetries) = trydBs($device,0x18,$dbRetries);
      	($peak2,$dbRetries) = trydBs($device,0x19,$dbRetries);
      	($avg1,$dbRetries)  = trydBs($device,0x1A,$dbRetries);
      	($avg2,$dbRetries)  = trydBs($device,0x1B,$dbRetries);
      	($max1,$dbRetries)  = trydBs($device,0x1C,$dbRetries);
      	($max2,$dbRetries)  = trydBs($device,0x1D,$dbRetries);
 
      	# Output if data collected  	
	my ($epoch,$msec) = Time::HiRes::gettimeofday();
	$peak1 = '' if ($peak1 == 4095);
	$peak2 = '' if ($peak2 == 4095);
	$avg1 = '' if ($avg1 == 4095);
	$avg2 = '' if ($avg2 == 4095);
	$max1 = '' if ($max1 == 4095);
	$max2 = '' if ($max2 == 4095);
	return($peak1,$peak2,$avg1,$avg2,$max1,$max2);
    }  
}	#	getdBs

sub trydBs {
	my $device = shift;
	my $register = shift;
	my $retries = shift;
	
	#	dbPause=500
    my ($tmp,$reading);
    $tmp = $device->read_word($register);
    $reading = checkNibbleChkSum($tmp);
    while ( (($reading == 65535) || ($reading == 4095)) && ($retries > 0)) {
       usleep(100);
       $tmp = $device->read_word($register);
       $reading = checkNibbleChkSum($tmp);
       $retries--;
    }
	return($reading,$retries);
}


while( $sig{ABRT} == 0) {
	my @sounds = getdBs();
	my $line = join(',',@sounds);
	print "$line\n";
        sleep(0.01);
}

1;
