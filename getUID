#!/usr/bin/perl
use strict;
use warnings;
use RPi::I2C;

sub getUID {
   my $UID_addy = shift;
   my ($byte1,$byte2,$byte3, $byte4,$device);
   my $UID = -1;
   if ( ($device = RPi::I2C->new($UID_addy)) && ($device->check_device($UID_addy)) ) {
      my $retries = 0;
      while ( ($retries++ < 20) && ( ($byte1 = $device->read_byte(0xFC)) == -1 ) ) {sleep 0.33;}
      while ( ($retries++ < 20) && ( ($byte2 = $device->read_byte(0xFD)) == -1 ) ) {sleep 0.33;}
      while ( ($retries++ < 20) && ( ($byte3 = $device->read_byte(0xFE)) == -1 ) ) {sleep 0.33;}
      while ( ($retries++ < 20) && ( ($byte4 = $device->read_byte(0xFF)) == -1 ) ) {sleep 0.33;}
      if ($retries < 20) {
         $UID=sprintf("%02X %02X %02X %02X",$byte1, $byte2, $byte3,$byte4);
         print "$UID\n";
      }
   }
   return ($UID);
}  # getUID

my @Addys = ('0x51','0x57','0x55');
if (defined($ARGV[0])) { 
   my $UID_addy = hex($ARGV[0]);
   if (getUID($UID_addy) eq "-1") {
      my $line = sprintf "Device 0x%02X UID error\n",$UID_addy;
      print $line;
   }
} else {
   my $found = 0;
   foreach my $curAddy (@Addys) {
      my $retries = 0;
      while ( ($found == 0) && ($retries++ < 3) )  {
         $found = 1 if (getUID(hex($curAddy)) ne "-1");
         sleep(0.33) unless ($found == 1);
      }
   }
   print "No UIDS found at ".join(',',@Addys). "\n" unless ( $found );
}

my $mac = `cat /sys/class/net/eth0/address`;
$mac =~ s/\R//g;
$mac = uc($mac);
print "$mac\n";

1;
