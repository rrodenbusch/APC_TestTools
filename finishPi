#!/bin/bash

usage () {
   NEW=$'\n'
   u="Usage:  finishPi -p (--pi)  [211|212|221|222|231]${NEW}"
   #u="$u               -e (--end) [1: NEMA1; 2: NEMA2; 3:Bridge)${NEW}"   
   echo "$u";
   exit 1;
}
##### Get Command Line
while [ "$1" != "" ]; do
    case $1 in
        -p | --pi )           shift
                              PI=$1
                              [ "$PI" == "231" ] && END=3
                              [ "$PI" == "221" ] && END=2
                              [ "$PI" == "222" ] && END=2
                              [ "$PI" == "211" ] && END=1
                              [ "$PI" == "212" ] && END=1
                              ;;
       # -e | --end )          shift
       #                       END=$1
       #                       ;;
        -h | --help )         usage
                              exit 1
                              ;;
        * )                   usage
                              exit 1
    esac
    shift
done
##### Check for specified end and UID on I2C
[ -z "$PI" ] && usage && exit 1
[ "$PI" == "211" ] || [ "$PI" == "212" ] || \ 
     [ "$PI" == "221" ] ||[ "$PI" == "222" ] || \
     [ "$PI" == "231" ] || usage

#### Check for I2C UID chip
i2cdetect -y 1 | grep -e '-- 55 --' >/dev/null 2>&1
[ "$?" == 0 ] && UIDADDY='0x55'
i2cdetect -y 1 | grep -e '-- 51 --' >/dev/null 2>&1
[ "$?" == 0 ] && UIDADDY='0x51'
[ -z "$UIDADDY" ] && echo "No UID found at 0x51 or 0x55" && exit 1
[ "$PI" == "231" ] && [ "$UIDADDY" != "0x55" ]   && echo "Unable to find UID at 0x55" && exit 1
[ "$PI" != "231" ] && [ "$UIDADDY" != "0x51" ]   && echo "Unable to find UID at 0x51" && exit 1

#### Check for readonly FS
READONLY=`$HOME/APC_TestTools/isreadOnly`

echo  "### Refresh git"
$HOME/APC_TestTools/stopRPi.pl kill
$HOME/APC_TestTools/gitAll
$HOME/APC_TestTools/pushRPi.sh
echo  "### Stop fire"
sudo systemctl stop fire

if [ "$READONLY" == "1" ]; then
   echo "### Mount rw to enable updates "
   sudo mount -o remount,rw /
   sudo mount -o remount,rw /boot
fi


$HOME/updates/PiInstall/staticIP.sh $PI
[ "$PI" == "211" ] && crontab $HOME/updates/PiInstall/cron1.tab
[ "$PI" == "221" ] && crontab $HOME/updates/PiInstall/cron1.tab
[ "$PI" == "212" ] && crontab $HOME/updates/PiInstall/cron2.tab
[ "$PI" == "222" ] && crontab $HOME/updates/PiInstall/cron2.tab
[ "$PI" == "231" ] && crontab $HOME/updates/PiInstall/cron3.tab

[ "$PI" == "231" ] && $HOME/APC_TestTools/setupThumbDATA


sudo $HOME/APC_TestTools/cleanMachine
sudo systemctl enable fire
$HOME/APC_TestTools/moveThumbLDATA
$HOME/APC_TestTools/setPiHostname $UIDADDY
echo ""
$HOME/APC_TestTools/queryI2C.pl |grep -e Ard -e UID -A 1 | grep -v 1B | grep -v 68
echo ""
echo "Restarting in 10..."
sleep 10
sudo shutdown -r now
